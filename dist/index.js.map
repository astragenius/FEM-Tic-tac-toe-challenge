{"version":3,"file":"index.js","mappings":"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","sources":["webpack://tic-tac-toe/webpack/bootstrap","webpack://tic-tac-toe/webpack/runtime/define property getters","webpack://tic-tac-toe/webpack/runtime/global","webpack://tic-tac-toe/webpack/runtime/hasOwnProperty shorthand","webpack://tic-tac-toe/webpack/runtime/publicPath","webpack://tic-tac-toe/./src/js/CreatePlayer.js","webpack://tic-tac-toe/./src/js/StartToggle.js","webpack://tic-tac-toe/./src/js/GameBoard.js","webpack://tic-tac-toe/./src/index.js","webpack://tic-tac-toe/./src/js/Modal.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import XSymbol from '../assets/img/toggle-x.svg'\r\nimport OSymbol from '../assets/img/toggle-o.svg'\r\nimport { renderWinner } from '..'\r\n\r\nexport class Player {\r\n    constructor(player, symbol) {\r\n        this.player = player\r\n        this.symbol = symbol\r\n        this.points = 0\r\n        this.playerTurn = symbol === 'X' ? true : false\r\n    }\r\n\r\n    setPoints() {\r\n        this.points++\r\n    }\r\n\r\n    getPoints() {\r\n        return this.points\r\n    }\r\n\r\n    getSymbol() {\r\n        return this.symbol\r\n    }\r\n    getPlayer() {\r\n        return this.player\r\n    }\r\n}\r\n\r\nexport class CPU extends Player {\r\n    cpuMove() {\r\n        let self = this\r\n\r\n        let oponent\r\n        if (self.symbol === 'X') {\r\n            oponent = 'O'\r\n        } else {\r\n            oponent = 'X'\r\n        }\r\n\r\n        const tiles = [...document.querySelectorAll('.game-tile')]\r\n        const turnImg = document.querySelector('.player-turn-symbol')\r\n        const gameField = document.querySelector('.game-field')\r\n        pointerEvents('none')\r\n\r\n        function randomNumber(num) {\r\n            return Math.floor(Math.random() * num)\r\n        }\r\n        function setSymbol(index) {\r\n            if (filteredTiles.length === 0) {\r\n                return\r\n            }\r\n\r\n            turnImg.setAttribute('data-turn', oponent)\r\n            filteredTiles[index].classList.add(`${self.symbol}-marker`)\r\n            gameField.setAttribute('data-turn', oponent)\r\n\r\n            turnImg.src = self.symbol === 'X' ? OSymbol : XSymbol\r\n        }\r\n\r\n        const filteredTiles = tiles.filter((tile) => {\r\n            return (\r\n                !tile.classList.contains('X-marker') &&\r\n                !tile.classList.contains('O-marker')\r\n            )\r\n        })\r\n\r\n        function pointerEvents(trigger) {\r\n            tiles.forEach((tile) => {\r\n                tile.style.pointerEvents = trigger\r\n            })\r\n        }\r\n\r\n        let tilesLength = filteredTiles.length\r\n        let randomTile = randomNumber(tilesLength)\r\n        setTimeout(() => {\r\n            setSymbol(randomTile)\r\n            pointerEvents('')\r\n            renderWinner(self)\r\n        }, 1000)\r\n\r\n        return\r\n    }\r\n}\r\n","import logoIMG from '../assets/img/logo.svg'\r\n\r\nexport const StartToggle = (function () {\r\n    const logo = document.querySelector('.game-menu-logo')\r\n    logo.src = logoIMG\r\n})()\r\n","import xSymbol from '../assets/img/toggle-x.svg'\r\nimport OSymbol from '../assets/img/toggle-o.svg'\r\n\r\nexport class GameBoard {\r\n    constructor(p1, p2) {\r\n        this.draw = 0\r\n        this.p1 = p1\r\n        this.p2 = p2\r\n    }\r\n\r\n    static resetGameBoard() {\r\n        const tiles = [...document.querySelectorAll('.game-tile')]\r\n        const turnImg = document.querySelector('.player-turn-symbol')\r\n        const gameField = document.querySelector('.game-field')\r\n        this.modalContainer = document.querySelector('.modal-container')\r\n\r\n        tiles.forEach((tile) => {\r\n            tile.classList.remove('X-marker')\r\n            tile.classList.remove('O-marker')\r\n        })\r\n        gameField.setAttribute('data-turn', 'X')\r\n        turnImg.setAttribute('data-turn', 'O')\r\n        turnImg.src = xSymbol\r\n        this.modalContainer.setAttribute('data-modal-active', false)\r\n    }\r\n\r\n    resetGame() {\r\n        this.p1.points = 0\r\n        this.p2.points = 0\r\n        this.draw = 0\r\n\r\n        this.renderPoints()\r\n    }\r\n\r\n    checkIsDraw() {\r\n        const tiles = [...document.querySelectorAll('.game-tile')]\r\n        return tiles.every((tile) => {\r\n            return (\r\n                tile.classList.contains('X-marker') ||\r\n                tile.classList.contains('O-marker')\r\n            )\r\n        })\r\n    }\r\n\r\n    checkWinner(currendClass) {\r\n        const tiles = [...document.querySelectorAll('.game-tile')]\r\n        const WINING_COMBINATION = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ]\r\n\r\n        return WINING_COMBINATION.some((combination) => {\r\n            return combination.every((index) => {\r\n                return tiles[index].classList.contains(currendClass)\r\n            })\r\n        })\r\n    }\r\n\r\n    addPointsP1() {\r\n        this.p1.points++\r\n    }\r\n\r\n    addPointsP2() {\r\n        this.p2.points++\r\n    }\r\n\r\n    setDraw() {\r\n        this.draw++\r\n    }\r\n\r\n    setPlayerName() {\r\n        const playerName1 = document.getElementById('playerName1')\r\n        const playerName2 = document.getElementById('playerName2')\r\n        if (this.p1.symbol === 'X' && this.p2.symbol === 'O') {\r\n            playerName1.textContent = `${this.p1.symbol} (${this.p1.player})`\r\n            playerName2.textContent = `${this.p2.symbol} (${this.p2.player})`\r\n        }\r\n        if (this.p1.symbol === 'O' && this.p2.symbol === 'X') {\r\n            playerName1.textContent = `${this.p2.symbol} (${this.p2.player})`\r\n            playerName2.textContent = `${this.p1.symbol} (${this.p1.player})`\r\n        }\r\n    }\r\n\r\n    renderPoints() {\r\n        const p1Score = document.querySelector('#playerScore')\r\n        const tieScore = document.querySelector('#tieScore')\r\n        const p2Score = document.querySelector('#player2Score')\r\n        p1Score.textContent = this.p1.points\r\n        p2Score.textContent = this.p2.points\r\n        tieScore.textContent = this.draw\r\n    }\r\n}\r\n","import './scss/index.scss'\r\n\r\nimport './assets/img/icon-restart.svg'\r\nimport logoImg from './assets/img/logo.svg'\r\nimport xSymbol from './assets/img/toggle-x.svg'\r\nimport OSymbol from './assets/img/toggle-o.svg'\r\nimport { Modal } from './js/Modal'\r\nimport { CPU, Player } from './js/CreatePlayer'\r\nimport { StartToggle } from './js/StartToggle'\r\nimport { GameBoard } from './js/GameBoard'\r\nimport { animateCSS } from './js/Animation'\r\n\r\nconst headerTurn = document.querySelector('.player-turn-symbol')\r\nconst gameBoardLogo = document.querySelector('.game-board-logo')\r\nconst logo = document.querySelector('.game-menu-logo')\r\n\r\nlet gameboard\r\n\r\nlogo.src = logoImg\r\n\r\nlet dataRestart = {\r\n    //playerText: '',\r\n    headText: 'restart game?',\r\n    playerSymbol: 'neutral',\r\n    btnText1: 'no, cancel',\r\n    btnText2: 'yes, restart',\r\n    closeFunc: function () {\r\n        const modalContainer = document.querySelector('.modal-container')\r\n        modalContainer.setAttribute('data-modal-active', false)\r\n    },\r\n    btnSec1Function: () => {\r\n        const board = document.querySelector('.game-board')\r\n        const toggle = document.querySelector('.game-menu')\r\n        GameBoard.resetGameBoard()\r\n        gameboard.resetGame()\r\n        gameboard = null\r\n        board.setAttribute('data-game-board', false)\r\n        toggle.setAttribute('data-toggle', true)\r\n    },\r\n}\r\nlet dataTied = {\r\n    playerText: '',\r\n    headText: 'Round tied',\r\n    playerSymbol: 'neutral',\r\n    btnText1: 'quit',\r\n    btnText2: 'next round',\r\n    closeFunc: function () {\r\n        const modalContainer = document.querySelector('.modal-container')\r\n        modalContainer.setAttribute('data-modal-active', false)\r\n    },\r\n    btnSec1Function: function () {\r\n        GameBoard.resetGameBoard()\r\n        gameStart()\r\n    },\r\n}\r\nlet dataWin = {\r\n    playerText: '',\r\n    headText: '',\r\n    btnText1: 'quit',\r\n    btnText2: 'next round',\r\n    closeFunc: function () {\r\n        const modalContainer = document.querySelector('.modal-container')\r\n        GameBoard.resetGameBoard()\r\n        modalContainer.setAttribute('data-modal-active', false)\r\n        const toggle = document.querySelector('.game-menu')\r\n        const board = document.querySelector('.game-board')\r\n        toggle.setAttribute('data-toggle', true)\r\n        board.setAttribute('data-game-board', false)\r\n    },\r\n    btnSec1Function: function () {\r\n        GameBoard.resetGameBoard()\r\n        gameStart()\r\n    },\r\n}\r\n\r\nconst modal = new Modal(dataRestart)\r\n\r\nconst createPvC = () => {\r\n    const input = document.querySelector('.checkbox').checked\r\n    if (input === true) {\r\n        gameboard = new GameBoard(new Player('YOU', 'X'), new CPU('CPU', 'O'))\r\n    } else if (input === false) {\r\n        gameboard = new GameBoard(new Player('YOU', 'O'), new CPU('CPU', 'X'))\r\n    }\r\n}\r\nconst createPvP = () => {\r\n    const input = document.querySelector('.checkbox').checked\r\n    if (input === true) {\r\n        gameboard = new GameBoard(\r\n            new Player('Player1', 'X'),\r\n            new Player('Player2', 'O')\r\n        )\r\n    } else if (input === false) {\r\n        gameboard = new GameBoard(\r\n            new Player('Player1', 'O'),\r\n            new Player('Player2', 'X')\r\n        )\r\n    }\r\n}\r\n\r\n//logo.src = logoImg\r\nheaderTurn.src = xSymbol\r\ngameBoardLogo.src = logoImg\r\n\r\nconst pvc = document.getElementById('btn-pvp')\r\n\r\nconst pvCpu = document.getElementById('btn-pvsCpu')\r\n\r\nfunction showModal(state, player) {\r\n    const modalContainer = document.querySelector('.modal-container')\r\n    if (!modalContainer.contains(document.querySelector('.modal'))) {\r\n        modal.newState(state, player)\r\n        modalContainer.appendChild(modal.render())\r\n    }\r\n    if (modalContainer.contains(document.querySelector('.modal'))) {\r\n        modal.newState(state, player)\r\n        modalContainer.appendChild(modal.render())\r\n    }\r\n    if (modalContainer.getAttribute('data-modal-active') === 'false') {\r\n        modalContainer.setAttribute('data-modal-active', true)\r\n    }\r\n}\r\nfunction renderDraw() {\r\n    if (\r\n        gameboard.checkIsDraw() === true &&\r\n        gameboard.checkWinner('O-marker') === false &&\r\n        gameboard.checkWinner('X-marker') === false\r\n    ) {\r\n        showModal(dataTied)\r\n        gameboard.setDraw()\r\n        gameboard.renderPoints()\r\n    } else {\r\n        return\r\n    }\r\n}\r\nexport function renderWinner(player) {\r\n    if (gameboard.checkWinner('X-marker') === true) {\r\n        console.log('X-winns', player)\r\n        modal.newState(dataWin, player)\r\n        showModal(dataWin, player)\r\n        gameboard.addPointsP1()\r\n        gameboard.renderPoints()\r\n        //PlayerTurn reset after win\r\n        if (gameboard.p1.getSymbol() === 'X') {\r\n            gameboard.p1.playerTurn = true\r\n            gameboard.p2.playerTurn = false\r\n        } else {\r\n            gameboard.p1.playerTurn = false\r\n            gameboard.p2.playerTurn = true\r\n        }\r\n    } else if (gameboard.checkWinner('O-marker') === true) {\r\n        console.log('O-winns', player)\r\n        modal.newState(dataWin, player)\r\n        showModal(dataWin, player)\r\n        gameboard.addPointsP2()\r\n        gameboard.renderPoints()\r\n\r\n        //playerTurn reset after win\r\n\r\n        if (gameboard.p1.getSymbol() === 'X') {\r\n            gameboard.p1.playerTurn = true\r\n            gameboard.p2.playerTurn = false\r\n        } else {\r\n            gameboard.p1.playerTurn = false\r\n            gameboard.p2.playerTurn = true\r\n        }\r\n    }\r\n}\r\nfunction reloadBtn() {\r\n    document\r\n        .querySelector('.btn-reload')\r\n        .addEventListener('click', () => showModal(dataRestart))\r\n}\r\nfunction gameLogicPVC() {\r\n    const gameField = document.querySelector('.game-field')\r\n    const turnImg = document.querySelector('.player-turn-symbol')\r\n\r\n    this.classList.add(`${gameboard.p1.symbol}-marker`)\r\n    turnImg.src = gameboard.p1.symbol === 'X' ? OSymbol : xSymbol\r\n\r\n    if (\r\n        gameboard.p1.playerTurn === true &&\r\n        gameboard.checkWinner(`${gameboard.p1.symbol}-marker`)\r\n    ) {\r\n        turnImg.setAttribute('data-turn', gameboard.p2.symbol)\r\n        gameField.setAttribute('data-turn', gameboard.p1.symbol)\r\n\r\n        renderWinner(gameboard.p1)\r\n        gameboard.p1.playerTurn = false\r\n        gameboard.p2.playerTurn = true\r\n        if (!gameboard.checkWinner(`${gameboard.p1.symbol}-marker`)) {\r\n            gameboard.p2.cpuMove()\r\n        }\r\n    } else {\r\n        gameboard.p2.cpuMove()\r\n\r\n        gameboard.p1.playerTurn = true\r\n        gameboard.p2.playerTurn = false\r\n        renderWinner(gameboard.p2)\r\n    }\r\n    renderDraw()\r\n}\r\n\r\nfunction gameLogicPVP() {\r\n    const gameField = document.querySelector('.game-field')\r\n    const turnImg = document.querySelector('.player-turn-symbol')\r\n\r\n    if (gameboard.p2.playerTurn === false) {\r\n        turnImg.setAttribute('data-turn', gameboard.p1.symbol)\r\n\r\n        this.classList.add(`${gameboard.p1.symbol}-marker`)\r\n        gameField.setAttribute('data-turn', gameboard.p2.symbol)\r\n\r\n        turnImg.src = gameboard.p1.symbol === 'X' ? OSymbol : xSymbol\r\n\r\n        gameboard.p2.playerTurn = true\r\n        gameboard.p1.playerTurn = false\r\n        renderWinner(gameboard.p1)\r\n    } else {\r\n        turnImg.setAttribute('data-turn', gameboard.p2.symbol)\r\n        this.classList.add(`${gameboard.p2.symbol}-marker`)\r\n        gameField.setAttribute('data-turn', gameboard.p1.symbol)\r\n        turnImg.src = gameboard.p2.symbol === 'X' ? OSymbol : xSymbol\r\n\r\n        gameboard.p1.playerTurn = true\r\n        gameboard.p2.playerTurn = false\r\n        renderWinner(gameboard.p2)\r\n    }\r\n\r\n    renderDraw()\r\n}\r\n\r\nfunction gameStart() {\r\n    const tiles = [...document.querySelectorAll('.game-tile')]\r\n\r\n    reloadBtn()\r\n\r\n    if (gameboard.p2.getPlayer() === 'CPU') {\r\n        if (gameboard.p2.symbol === 'X') {\r\n            gameboard.p1.playerTurn = true\r\n            gameboard.p2.playerTurn = false\r\n            gameboard.p2.cpuMove()\r\n        }\r\n\r\n        tiles.forEach((tile) => {\r\n            tile.removeEventListener('click', gameLogicPVP, true)\r\n            tile.addEventListener('click', gameLogicPVC, true)\r\n        })\r\n    } else {\r\n        tiles.forEach((tile) => {\r\n            tile.removeEventListener('click', gameLogicPVC, true)\r\n            tile.addEventListener('click', gameLogicPVP, true)\r\n        })\r\n    }\r\n}\r\n\r\nfunction gameInit() {\r\n    pvCpu.addEventListener('click', () => {\r\n        const toggle = document.querySelector('.game-menu')\r\n        const board = document.querySelector('.game-board')\r\n        createPvC()\r\n        toggle.setAttribute('data-toggle', false)\r\n        board.setAttribute('data-game-board', true)\r\n        gameStart()\r\n        gameboard.setPlayerName()\r\n    })\r\n    pvc.addEventListener('click', () => {\r\n        const toggle = document.querySelector('.game-menu')\r\n        const board = document.querySelector('.game-board')\r\n        createPvP()\r\n        toggle.setAttribute('data-toggle', false)\r\n        board.setAttribute('data-game-board', true)\r\n        gameStart()\r\n        gameboard.setPlayerName()\r\n    })\r\n}\r\n\r\ngameInit()\r\n","import { animateCSS } from './Animation'\r\n\r\nexport class Modal {\r\n    constructor(props, player = '') {\r\n        this.state = {\r\n            playerText: props.playerText,\r\n            headText: props.headText,\r\n            playerSymbol: props.playerSymbol,\r\n            btnText1: props.btnText1,\r\n            btnText2: props.btnText2,\r\n            closeFunc: props.closeFunc,\r\n            btnSec1Function: props.btnSec1Function,\r\n        }\r\n\r\n        this.modalContainer = document.querySelector('.modal-container')\r\n    }\r\n\r\n    newState(newProps, player = '') {\r\n        this.state = {\r\n            playerText: newProps.playerText,\r\n            headText: newProps.headText,\r\n            playerSymbol: newProps.playerSymbol,\r\n            btnText1: newProps.btnText1,\r\n            btnText2: newProps.btnText2,\r\n            closeFunc: newProps.closeFunc,\r\n            btnSec1Function: newProps.btnSec1Function,\r\n        }\r\n        this.player = player\r\n    }\r\n\r\n    update() {\r\n        this.modalContainer.appendChild(this.render())\r\n    }\r\n\r\n    delModal() {\r\n        if (this.modalContainer.contains(document.querySelector('.modal'))) {\r\n            this.modalContainer.removeChild(document.querySelector('.modal'))\r\n        } else {\r\n            return\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.delModal()\r\n        const modalSectionStyle = `modal bg-dark-navy1 full-bleed`\r\n        const modalSection = document.createElement('section')\r\n        modalSection.className += modalSectionStyle\r\n\r\n        const modalContent = document.createElement('div')\r\n        modalContent.classList.add('modal-content')\r\n\r\n        const playerTextStyle = `uppercase clr-neutral-silver fw-700 fs-14 letter-spacing-xs margin-block-end-24`\r\n        const playerText = document.createElement('p')\r\n        playerText.className += playerTextStyle\r\n        if (this.player.player === '') {\r\n            playerText.textContent = ''\r\n        } else if (this.player.player === 'YOU') {\r\n            playerText.textContent = `${this.player.player} won!`\r\n        } else if (this.player.player === 'CPU') {\r\n            playerText.textContent = `Oh no, you lost...`\r\n        } else if (this.state.headText === 'Round tied') {\r\n            playerText.textContent = ''\r\n        } else if (this.state.headText === 'restart game?') {\r\n            playerText.textContent = ''\r\n        } else {\r\n            playerText.textContent = `${this.player.player} winns!`\r\n        }\r\n\r\n        const headTextStyle = `modal-titel | fs-24 uppercase clr-neutral-silver fw-700 letter-spacing-m margin-block-end-24`\r\n        const headText = document.createElement('h3')\r\n        headText.className += headTextStyle\r\n        headText.setAttribute('data-winner', this.player.symbol)\r\n\r\n        if (this.player.symbol === 'O' || this.player.symbol === 'X') {\r\n            headText.textContent = 'takes the round'\r\n        } else {\r\n            headText.textContent = this.state.headText\r\n            headText.setAttribute('data-winner', this.state.playerSymbol)\r\n        }\r\n\r\n        const buttonContainer = document.createElement('div')\r\n        buttonContainer.classList.add('modal-button-container')\r\n\r\n        const btnStyle1 = `btn btn-sec-1 | fs-16 fw-700 letter-spacing-xs bg-light-yellow padding-16`\r\n        const btnStyle2 = `btn btn-sec-2 | fs-16 fw-700 letter-spacing-xs bg-neutral-silver padding-16`\r\n        const btnSec1 = document.createElement('button')\r\n        const btnSec2 = document.createElement('button')\r\n        btnSec1.className += btnStyle1\r\n        btnSec2.className += btnStyle2\r\n\r\n        btnSec2.addEventListener('click', () => {\r\n            this.state.closeFunc()\r\n        })\r\n        btnSec1.addEventListener('click', () => {\r\n            this.state.btnSec1Function()\r\n        })\r\n\r\n        btnSec1.textContent = this.state.btnText2\r\n        btnSec2.textContent = this.state.btnText1\r\n\r\n        buttonContainer.appendChild(btnSec2)\r\n        buttonContainer.appendChild(btnSec1)\r\n\r\n        modalContent.appendChild(playerText)\r\n        modalContent.appendChild(headText)\r\n        modalContent.appendChild(buttonContainer)\r\n        modalSection.appendChild(modalContent)\r\n\r\n        return modalSection\r\n    }\r\n}\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","Player","constructor","player","symbol","points","playerTurn","setPoints","getPoints","getSymbol","getPlayer","CPU","cpuMove","oponent","self","tiles","querySelectorAll","turnImg","querySelector","gameField","pointerEvents","filteredTiles","filter","tile","classList","contains","trigger","forEach","style","randomTile","num","Math","floor","random","setTimeout","index","setAttribute","add","renderWinner","GameBoard","p1","p2","draw","static","modalContainer","remove","resetGame","renderPoints","checkIsDraw","every","checkWinner","currendClass","some","combination","addPointsP1","addPointsP2","setDraw","setPlayerName","playerName1","getElementById","playerName2","textContent","p1Score","tieScore","p2Score","headerTurn","gameBoardLogo","gameboard","dataRestart","headText","playerSymbol","btnText1","btnText2","closeFunc","btnSec1Function","board","toggle","resetGameBoard","dataTied","playerText","gameStart","dataWin","modal","props","state","newState","newProps","update","appendChild","render","delModal","removeChild","modalSection","createElement","className","modalContent","buttonContainer","btnSec1","btnSec2","addEventListener","pvc","showModal","getAttribute","renderDraw","console","log","gameLogicPVC","gameLogicPVP","removeEventListener","input","checked","createPvC","createPvP"],"sourceRoot":""}